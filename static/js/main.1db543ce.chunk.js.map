{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","handleFetchUsers","pageNumber","a","users","currentPage","totalPage","error","axios","get","then","response","data","page","total_pages","catch","err","message","setState","state","this","className","id","map","item","i","src","avatar","alt","first_name","last_name","email","Array","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAoFeA,E,kDA9Eb,aAAe,IAAD,8BACZ,gBAaFC,iBAdc,uCAcK,WAAMC,GAAN,qBAAAC,EAAA,6DAMbC,EAAQ,KAAMC,EAAc,EAAGC,EAAY,EAAGC,EAAQ,GANzC,SAOXC,IAAMC,IAAI,oCAAoCP,GACjDQ,MAAK,SAASC,GACXP,EAAQO,EAASC,KAAKA,KACtBP,EAAcM,EAASC,KAAKC,KAC5BP,EAAYK,EAASC,KAAKE,eAE7BC,OAAM,SAASC,GACZT,EAAQS,EAAIC,WAdD,OAgBjB,EAAKC,SAAS,CACZd,MAAOA,EACPC,YAAaA,EACbC,UAAWA,EACXC,MAAOA,IApBQ,2CAdL,sDAEZ,EAAKY,MAAM,CACTf,MAAM,KACNC,YAAa,EACbC,UAAW,EACXC,MAAO,IANG,E,qDASd,WAEEa,KAAKnB,iBAAiB,K,oBA2BxB,WAAU,IAAD,OACP,OACE,sBAAKoB,UAAU,MAAf,UACC,qBAAKC,GAAG,WAAR,SACC,8CAIA,qBAAKA,GAAG,gBAAR,SAEEF,KAAKD,MAAMf,MACXgB,KAAKD,MAAMf,MAAMmB,KAAI,SAACC,EAAKC,GAAN,OACrB,qBAAKH,GAAG,iBAAR,SACA,sBAAKA,GAAG,oBAAR,UAEA,qBAAKA,GAAG,gBAAgBI,IAAKF,EAAKG,OAAQC,IAAI,KAC9C,+BAAKJ,EAAKK,WAAV,IAAuBL,EAAKM,aAC5B,4BAAIN,EAAKO,UAJwBN,QAQjC,OAGDL,KAAKD,MAAMZ,MACV,oBAAIc,UAAU,QAAd,SAAuBD,KAAKD,MAAMZ,QAClC,KAEF,8BACG,YAAIyB,MAAMZ,KAAKD,MAAMb,YAAYiB,KAAI,SAACV,EAAMoB,GAAP,OACpC,yBAAsBC,QAAS,kBAAM,EAAKjC,iBAAiBgC,EAAM,IAAIZ,UAAW,EAAKF,MAAMd,cAAe4B,EAAM,EAAK,gBAAgB,GAArI,kBACQA,EAAM,IADDA,EAAM,e,GAtEbE,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1db543ce.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state={\n      users:null,\n      currentPage: 1,\n      totalPage: 1,\n      error: ''\n    }\n  }\n  componentDidMount()\n  {\n    this.handleFetchUsers(1);\n  }\n\n  handleFetchUsers = async(pageNumber) => {\n    // fetch('https://reqres.in/api/users').then((resp)=>{\n    //   resp.json().then((result) =>{\n    //     this.setState({users:result.data})\n    //   })\n    // })\n    var users = null, currentPage = 1, totalPage = 1, error = '';\n    await axios.get('https://reqres.in/api/users?page='+pageNumber)\n      .then(function(response){\n          users = response.data.data;\n          currentPage = response.data.page;\n          totalPage = response.data.total_pages;\n      })\n      .catch(function(err){\n          error = err.message;\n      });\n    this.setState({\n      users: users,\n      currentPage: currentPage,\n      totalPage: totalPage,\n      error: error\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       <div id=\"top-head\">\n        <h1>\n        Question 2\n        </h1>\n        </div>\n        <div id=\"box-container\">\n        {\n          this.state.users ?\n          this.state.users.map((item,i)=>\n          <div id=\"data-container\">\n          <div id=\"content-container\" key={i}>\n         \n          <img id=\"img-container\" src={item.avatar} alt=\"\"/>\n          <h3>{item.first_name} {item.last_name}</h3>\n          <p>{item.email}</p>\n          </div>\n          </div>)\n          :\n          null\n        }</div>\n\n        {this.state.error ? \n          <h1 className=\"error\">{this.state.error}</h1> \n        : null}\n      \n        <div>\n          {[...Array(this.state.totalPage)].map((page, index) => \n            <button key={index+1} onClick={() => this.handleFetchUsers(index+1)} className={this.state.currentPage===(index+1) ? \"selected-page\":\"\"}>\n              Page {index+1}\n            </button>\n          )}\n        </div>\n      </div> \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}